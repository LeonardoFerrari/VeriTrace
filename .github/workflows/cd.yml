name: CD

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  release:
    types: [ published ]

jobs:
  deploy-homologation:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: homologation

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest --cov=src --cov-report=xml

    - name: Build application
      run: |
        echo "Building VeriTrace application..."
        # Add your build commands here
        python -c "print('Build completed')"

    - name: Deploy to homologation
      run: |
        echo "Deploying to homologation environment..."
        # comandos deploy homol
        echo "Homologation deployment completed"

  deploy-production:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    environment: Main
    needs: []

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run full test suite
      run: |
        pytest --cov=src --cov-report=xml

    - name: Build production package
      run: |
        python -m pip install build
        python -m build

    - name: Create Docker image
      run: |
        echo "Building Docker image..."
        # docker build -t veritrace:${{ github.ref_name }} .
        echo "Docker image created: veritrace:${{ github.ref_name }}"

    - name: Deploy to main
      run: |
        echo "Deploying to production..."
        echo "Version: ${{ github.ref_name }}"
        # comandos deploy prod 
        echo "Production deployment completed"

    - name: Create deployment notification
      run: |
        echo "VeriTrace ${{ github.ref_name }} deployed successfully to production"

  publish-package:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [deploy-production]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install publishing dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        # Uncomment when ready to publish to PyPI
        # twine upload dist/*
        echo "Package ready for PyPI publication"

  notify:
    runs-on: ubuntu-latest
    needs: [deploy-homologation, deploy-production]
    if: always()

    steps:
    - name: Deployment notification
      run: |
        if [ "${{ needs.deploy-homologation.result }}" == "success" ]; then
          echo "✅ Homologation deployment successful"
        fi
        if [ "${{ needs.deploy-production.result }}" == "success" ]; then
          echo "✅ Production deployment successful"
        fi
        echo "VeriTrace deployment pipeline completed"